// Code generated by MockGen. DO NOT EDIT.
// Source: ./contracts.go

// Package user is a generated GoMock package.
package user

import (
	context "context"
	reflect "reflect"

	apierr "github.com/SamStalschus/secrets-api/infra/errors"
	internal "github.com/SamStalschus/secrets-api/internal"
	gomock "github.com/golang/mock/gomock"
)

// MockIService is a mock of IService interface.
type MockIService struct {
	ctrl     *gomock.Controller
	recorder *MockIServiceMockRecorder
}

// MockIServiceMockRecorder is the mock recorder for MockIService.
type MockIServiceMockRecorder struct {
	mock *MockIService
}

// NewMockIService creates a new mock instance.
func NewMockIService(ctrl *gomock.Controller) *MockIService {
	mock := &MockIService{ctrl: ctrl}
	mock.recorder = &MockIServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIService) EXPECT() *MockIServiceMockRecorder {
	return m.recorder
}

// CreateUser mocks base method.
func (m *MockIService) CreateUser(ctx context.Context, user *internal.User) *apierr.Message {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", ctx, user)
	ret0, _ := ret[0].(*apierr.Message)
	return ret0
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockIServiceMockRecorder) CreateUser(ctx, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockIService)(nil).CreateUser), ctx, user)
}

// GetUser mocks base method.
func (m *MockIService) GetUser(ctx context.Context, userID string) (*internal.User, *apierr.Message) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUser", ctx, userID)
	ret0, _ := ret[0].(*internal.User)
	ret1, _ := ret[1].(*apierr.Message)
	return ret0, ret1
}

// GetUser indicates an expected call of GetUser.
func (mr *MockIServiceMockRecorder) GetUser(ctx, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUser", reflect.TypeOf((*MockIService)(nil).GetUser), ctx, userID)
}
